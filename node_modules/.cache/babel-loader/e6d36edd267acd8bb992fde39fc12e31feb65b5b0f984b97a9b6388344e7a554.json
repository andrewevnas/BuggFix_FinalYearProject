{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\andre\\\\Desktop\\\\BUGGFIX\\\\buggfix2\\\\src\\\\providers\\\\workspaceProvider.js\",\n  _s = $RefreshSig$();\nimport { createContext, useContext, useEffect, useState } from \"react\";\nimport { v4 } from \"uuid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const WorkspaceContext = /*#__PURE__*/createContext();\nconst initialData = [{\n  id: v4(),\n  title: \"Spring Boot\",\n  files: [{\n    id: v4(),\n    title: \"index\",\n    code: 'cout<<\"hello world\";',\n    language: \"cpp\"\n  }]\n}, {\n  id: v4(),\n  title: \"Frontend\",\n  files: [{\n    id: v4(),\n    title: \"test\",\n    code: 'console.log(\"Hello Frontend\"',\n    language: \"javascript\"\n  }]\n}];\nconst defaultCodes = {\n  cpp: `#include <iostream>\nusing namespace std;\nint main(){\n  cout<<\"Hello World\";\n  return 0;\n}`,\n  javascript: `console.log(\"hello javascript\")`,\n  python: `print(\"hello python\")`,\n  java: `public class Main{\n  public static void main(String[] args) {\n    System.out.println(\"Hello World\");\n  }\n}`\n};\nexport const WorkspaceProvider = ({\n  children\n}) => {\n  _s();\n  const [folders, setFolders] = useState(() => {\n    const localData = localStorage.getItem(\"data\");\n    if (localData) {\n      return JSON.parse(localData);\n    }\n    return initialData;\n  });\n  const createNewWorkspace = newWorkspace => {\n    const {\n      fileName,\n      folderName,\n      language\n    } = newWorkspace;\n    const newFolders = [...folders];\n    newFolders.push({\n      id: v4(),\n      title: folderName,\n      files: [{\n        id: v4(),\n        title: fileName,\n        code: defaultCodes[language],\n        language\n      }]\n    });\n    localStorage.setItem(\"data\", JSON.stringify(newFolders));\n    setFolders(newFolders);\n  };\n  const deleteFolder = id => {\n    const updatedFoldersList = folders.filter(folderItem => {\n      return folderItem.id !== id;\n    });\n    localStorage.setItem('data', JSON.stringify(updatedFoldersList));\n    setFolders(updatedFoldersList);\n  };\n  useEffect(() => {\n    if (!localStorage.getItem(\"data\")) {\n      localStorage.setItem(\"data\", JSON.stringify(folders));\n    }\n  }, []);\n  const workspaceFeatures = {\n    folders,\n    createNewWorkspace,\n    deleteFolder\n  };\n  return /*#__PURE__*/_jsxDEV(WorkspaceContext.Provider, {\n    value: workspaceFeatures,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 5\n  }, this);\n};\n_s(WorkspaceProvider, \"DNXUaCQLz5Y0qhdxycdDWhh+jBY=\");\n_c = WorkspaceProvider;\nvar _c;\n$RefreshReg$(_c, \"WorkspaceProvider\");","map":{"version":3,"names":["createContext","useContext","useEffect","useState","v4","jsxDEV","_jsxDEV","WorkspaceContext","initialData","id","title","files","code","language","defaultCodes","cpp","javascript","python","java","WorkspaceProvider","children","_s","folders","setFolders","localData","localStorage","getItem","JSON","parse","createNewWorkspace","newWorkspace","fileName","folderName","newFolders","push","setItem","stringify","deleteFolder","updatedFoldersList","filter","folderItem","workspaceFeatures","Provider","value","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/andre/Desktop/BUGGFIX/buggfix2/src/providers/workspaceProvider.js"],"sourcesContent":["import { createContext, useContext, useEffect, useState } from \"react\";\r\nimport { v4 } from \"uuid\";\r\n\r\nexport const WorkspaceContext = createContext();\r\n\r\nconst initialData = [\r\n  {\r\n    id: v4(),\r\n    title: \"Spring Boot\",\r\n    files: [\r\n      {\r\n        id: v4(),\r\n        title: \"index\",\r\n        code: 'cout<<\"hello world\";',\r\n        language: \"cpp\",\r\n      },\r\n    ],\r\n  },\r\n\r\n  {\r\n    id: v4(),\r\n    title: \"Frontend\",\r\n    files: [\r\n      {\r\n        id: v4(),\r\n        title: \"test\",\r\n        code: 'console.log(\"Hello Frontend\"',\r\n        language: \"javascript\",\r\n      },\r\n    ],\r\n  },\r\n];\r\n\r\nconst defaultCodes = {\r\n  cpp: `#include <iostream>\r\nusing namespace std;\r\nint main(){\r\n  cout<<\"Hello World\";\r\n  return 0;\r\n}`,\r\n\r\n  javascript: `console.log(\"hello javascript\")`,\r\n\r\n  python: `print(\"hello python\")`,\r\n\r\n  java: `public class Main{\r\n  public static void main(String[] args) {\r\n    System.out.println(\"Hello World\");\r\n  }\r\n}`,\r\n};\r\n\r\nexport const WorkspaceProvider = ({ children }) => {\r\n  const [folders, setFolders] = useState(() => {\r\n    const localData = localStorage.getItem(\"data\");\r\n    if (localData) {\r\n      return JSON.parse(localData);\r\n    }\r\n    return initialData;\r\n  });\r\n\r\n  const createNewWorkspace = (newWorkspace) => {\r\n    const { fileName, folderName, language } = newWorkspace;\r\n    const newFolders = [...folders];\r\n\r\n    newFolders.push({\r\n      id: v4(),\r\n      title: folderName,\r\n      files: [\r\n        {\r\n          id: v4(),\r\n          title: fileName,\r\n          code: defaultCodes[language],\r\n          language,\r\n        },\r\n      ],\r\n    });\r\n\r\n    localStorage.setItem(\"data\", JSON.stringify(newFolders));\r\n    setFolders(newFolders);\r\n  };\r\n\r\n  const deleteFolder = (id) => {\r\n    const updatedFoldersList = folders.filter((folderItem) => {\r\n      return folderItem.id !== id;\r\n    });\r\n  \r\n    localStorage.setItem('data', JSON.stringify(updatedFoldersList));\r\n    setFolders(updatedFoldersList);\r\n  };\r\n\r\n  \r\n  \r\n\r\n  useEffect(() => {\r\n    if (!localStorage.getItem(\"data\")) {\r\n      localStorage.setItem(\"data\", JSON.stringify(folders));\r\n    }\r\n  }, []);\r\n\r\n  const workspaceFeatures = {\r\n    folders,\r\n    createNewWorkspace,\r\n    deleteFolder\r\n  };\r\n\r\n  return (\r\n    <WorkspaceContext.Provider value={workspaceFeatures}>\r\n      {children}\r\n    </WorkspaceContext.Provider>\r\n  );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}