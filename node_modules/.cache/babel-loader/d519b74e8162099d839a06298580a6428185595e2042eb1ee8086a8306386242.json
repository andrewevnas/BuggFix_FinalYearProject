{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\andre\\\\Desktop\\\\BUGGFIX\\\\buggfix2\\\\src\\\\screens\\\\workspaceScreen\\\\index.js\",\n  _s = $RefreshSig$();\nimport { useParams } from \"react-router-dom\";\nimport \"./WSindex.scss\";\nimport { EditorContainer } from \"./editorContainer\";\nimport { useCallback, useState } from \"react\";\nimport { makeSubmission } from \"./service\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const WorkspaceScreen = () => {\n  _s();\n  const params = useParams();\n  const {\n    fileId,\n    folderId\n  } = params;\n  const [input, setInput] = useState('');\n  const [output, setOutput] = useState('');\n  const [showLoader, setShowLoader] = useState(false);\n  const importInput = e => {\n    const file = e.target.files[0];\n    const fileType = file.type.includes(\"text\");\n    if (fileType) {\n      const fileReader = new FileReader();\n      fileReader.readAsText(file);\n      fileReader.onload = e => {\n        setInput(e.target.result);\n      };\n    } else {\n      alert(\"Please choose a program file\");\n    }\n  };\n  const exportOutput = () => {\n    // download a txt file with the contents from the output textarea\n    const outputValue = output.trim();\n    if (!outputValue) {\n      alert(\"Output is Empty\");\n      return;\n    }\n    const blob = new Blob([outputValue], {\n      type: \"text/plain\"\n    });\n    const url = URL.createObjectURL(blob);\n    const link = document.createElement(\"a\");\n    link.href = url;\n    link.download = `output.txt`;\n    link.click();\n  };\n  const callback = ({\n    apiStatus,\n    data,\n    message\n  }) => {\n    if (apiStatus === 'loading') {\n      setShowLoader(true);\n    } else if (apiStatus === 'error') {\n      setOutput(\"Something went wrong\");\n    } else {\n      // apiStatus === success\n      if (data.status.id === 3) {\n        setOutput(atob(data.stdout));\n      } else {\n        setOutput(atob(data.stderr));\n      }\n    }\n  };\n  const runCode = useCallback(({\n    code,\n    language\n  }) => {\n    // console.log(code, language, input)\n    makeSubmission({\n      code,\n      language,\n      stdin: input,\n      callback\n    });\n  }, [input]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"workspace-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header-container\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"./BFlogo.png\",\n        className: \"logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"editor-container\",\n        children: /*#__PURE__*/_jsxDEV(EditorContainer, {\n          fileId: fileId,\n          folderId: folderId,\n          runCode: runCode\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-output-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Input:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            htmlFor: \"input\",\n            className: \"icon-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"material-icons\",\n              children: \"cloud_upload\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Import Input\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            placeholder: \"Enter desired input before running code:\",\n            type: \"file\",\n            id: \"input\",\n            style: {\n              display: \"none\"\n            },\n            onChange: importInput\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: input,\n          onChange: e => setInput(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-output-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Output:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"icon-container\",\n            onClick: exportOutput,\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"material-icons\",\n              children: \"cloud_download\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Export Output\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          readOnly: true,\n          value: output,\n          onChange: e => setInput(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), showLoader && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fullpage-loader\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loader\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 22\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n_s(WorkspaceScreen, \"2scxCS4c1eiNTRtSjwPBU+tDiRs=\", false, function () {\n  return [useParams];\n});\n_c = WorkspaceScreen;\nvar _c;\n$RefreshReg$(_c, \"WorkspaceScreen\");","map":{"version":3,"names":["useParams","EditorContainer","useCallback","useState","makeSubmission","jsxDEV","_jsxDEV","WorkspaceScreen","_s","params","fileId","folderId","input","setInput","output","setOutput","showLoader","setShowLoader","importInput","e","file","target","files","fileType","type","includes","fileReader","FileReader","readAsText","onload","result","alert","exportOutput","outputValue","trim","blob","Blob","url","URL","createObjectURL","link","document","createElement","href","download","click","callback","apiStatus","data","message","status","id","atob","stdout","stderr","runCode","code","language","stdin","className","children","src","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","placeholder","style","display","onChange","value","onClick","readOnly","_c","$RefreshReg$"],"sources":["C:/Users/andre/Desktop/BUGGFIX/buggfix2/src/screens/workspaceScreen/index.js"],"sourcesContent":["import { useParams } from \"react-router-dom\";\r\nimport \"./WSindex.scss\";\r\nimport { EditorContainer } from \"./editorContainer\";\r\nimport { useCallback, useState } from \"react\";\r\nimport { makeSubmission } from \"./service\";\r\n\r\nexport const WorkspaceScreen = () => {\r\n  const params = useParams();\r\n  const {fileId, folderId} = params;\r\n\r\n  const [input, setInput] = useState('');\r\n\r\n  const [output, setOutput] = useState('');\r\n\r\n  const [showLoader, setShowLoader] = useState(false);\r\n\r\n  const importInput = (e) => {\r\n    const file = e.target.files[0];\r\n    const fileType = file.type.includes(\"text\");\r\n\r\n    if (fileType) {\r\n      const fileReader = new FileReader();\r\n      fileReader.readAsText(file);\r\n      fileReader.onload = (e) => {\r\n        setInput(e.target.result);\r\n      };\r\n    } else {\r\n      alert(\"Please choose a program file\");\r\n    }\r\n  };\r\n\r\n  const exportOutput = () => {\r\n    // download a txt file with the contents from the output textarea\r\n    const outputValue = output.trim();\r\n    if (!outputValue) {\r\n      alert(\"Output is Empty\");\r\n      return;\r\n    }\r\n\r\n    const blob = new Blob([outputValue], { type: \"text/plain\" });\r\n    const url = URL.createObjectURL(blob);\r\n    const link = document.createElement(\"a\");\r\n    link.href = url;\r\n    link.download = `output.txt`;\r\n    link.click();\r\n  };\r\n\r\n  const callback = ({ apiStatus, data, message }) => {\r\n    if (apiStatus === 'loading') {\r\n      setShowLoader(true);\r\n    } else if (apiStatus === 'error') {\r\n      setOutput(\"Something went wrong\");\r\n    } else {\r\n      // apiStatus === success\r\n      if (data.status.id === 3) {\r\n        setOutput(atob(data.stdout));\r\n      } else {\r\n        setOutput(atob(data.stderr));\r\n      }\r\n    }\r\n  };\r\n  \r\n  \r\n  const runCode = useCallback(({ code, language}) => {\r\n    // console.log(code, language, input)\r\n    makeSubmission({ code, language, stdin: input, callback })\r\n  }, [input]);\r\n  \r\n  \r\n\r\n  return (\r\n    <div className=\"workspace-container\">\r\n      <div className=\"header-container\">\r\n        <img src=\"./BFlogo.png\" className=\"logo\" />\r\n      </div>\r\n\r\n      <div className=\"content-container\">\r\n          <div className=\"editor-container\">\r\n            <EditorContainer fileId={fileId} folderId= {folderId} runCode = {runCode}/>\r\n          </div>\r\n\r\n          <div className=\"input-output-container\">\r\n            <div className=\"input-header\">\r\n              <b>Input:</b>\r\n              <button htmlFor=\"input\" className=\"icon-container\">\r\n                <span className=\"material-icons\">cloud_upload</span>\r\n                <b>Import Input</b>\r\n              </button>\r\n              <input\r\n              placeholder=\"Enter desired input before running code:\"\r\n                type=\"file\"\r\n                id=\"input\"\r\n                style={{ display: \"none\" }}\r\n                onChange={importInput}\r\n              />\r\n            </div>\r\n            <textarea\r\n              value={input}\r\n              onChange={(e) => setInput(e.target.value)}\r\n            ></textarea>\r\n          </div>\r\n\r\n          <div className=\"input-output-container\">\r\n            <div className=\"input-header\">\r\n              <b>Output:</b>\r\n              <button className=\"icon-container\" onClick={exportOutput}>\r\n                <span className=\"material-icons\">cloud_download</span>\r\n                <b>Export Output</b>\r\n              </button>\r\n            </div>\r\n            <textarea\r\n              readOnly\r\n              value={output}\r\n              onChange={(e) => setInput(e.target.value)}\r\n            ></textarea>\r\n          </div>   \r\n      </div>\r\n\r\n      {showLoader && <div className = \"fullpage-loader\">\r\n        <div className = \"loader\"></div>\r\n\r\n      </div>}\r\n\r\n    </div>\r\n  );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}