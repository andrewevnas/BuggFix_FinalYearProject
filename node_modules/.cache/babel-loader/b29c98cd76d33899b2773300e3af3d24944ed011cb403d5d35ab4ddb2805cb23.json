{"ast":null,"code":"const languageCodeMap = {\n  cpp: 54,\n  python: 92,\n  javascript: 93,\n  java: 91\n};\nasync function getSubmission(tokenId, callback) {\n  const url = `https://judge0-ce.p.rapidapi.com/submissions/${tokenId}?base64_encoded=true&fields=*`;\n  const options = {\n    method: \"GET\",\n    headers: {\n      \"x-rapidapi-key\": '1558ae9227msh2b84ac0e3c035a6p1f1ea8jsnd5f346ec6800',\n      'x-rapidapi-host': 'judge0-ce.p.rapidapi.com'\n    }\n  };\n  try {\n    const response = await fetch(url, options);\n    const result = await response.json();\n    console.log(result);\n  } catch (error) {\n    callback({\n      apiStatus: 'error',\n      message: JSON.stringify(error)\n    });\n  }\n}\nexport async function makeSubmission({\n  code,\n  language,\n  callback,\n  stdin\n}) {\n  // make a submission handle the status of the submission\n  const url = \"https://judge0-ce.p.rapidapi.com/submissions?base64_encoded=true&fields=*\";\n  const httpOptions = {\n    method: \"POST\",\n    headers: {\n      \"x-rapidapi-key\": \"1558ae9227msh2b84ac0e3c035a6p1f1ea8jsnd5f346ec6800\",\n      \"x-rapidapi-host\": \"judge0-ce.p.rapidapi.com\",\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      language_id: languageCodeMap[language],\n      source_code: btoa(code),\n      stdin: btoa(stdin)\n    })\n  };\n  try {\n    callback({\n      apiStatus: 'loading'\n    });\n    const response = await fetch(url, httpOptions);\n    const result = await response.json();\n    const tokenId = result.token;\n    let statusCode = 1; // in queue\n    let apiSubmissionResult;\n    while (statusCode === 1 || statusCode === 2) {\n      try {\n        apiSubmissionResult = await getSubmission(tokenId);\n        statusCode = apiSubmissionResult.status.id;\n      } catch (error) {\n        callback({\n          apiStatus: 'error',\n          message: JSON.stringify(error)\n        });\n        return;\n      }\n    }\n    if (apiSubmissionResult) {\n      callback({\n        apiStatus: 'success',\n        data: apiSubmissionResult\n      });\n    }\n  } catch (error) {\n    callback({\n      apiStatus: \"error\",\n      message: JSON.stringify(error)\n    });\n  }\n}","map":{"version":3,"names":["languageCodeMap","cpp","python","javascript","java","getSubmission","tokenId","callback","url","options","method","headers","response","fetch","result","json","console","log","error","apiStatus","message","JSON","stringify","makeSubmission","code","language","stdin","httpOptions","body","language_id","source_code","btoa","token","statusCode","apiSubmissionResult","status","id","data"],"sources":["C:/Users/andre/Desktop/BUGGFIX/buggfix2/src/screens/workspaceScreen/service.js"],"sourcesContent":["const languageCodeMap = {\r\n  cpp: 54,\r\n  python: 92,\r\n  javascript: 93,\r\n  java: 91,\r\n};\r\n\r\nasync function getSubmission(tokenId, callback) {\r\n  const url = `https://judge0-ce.p.rapidapi.com/submissions/${tokenId}?base64_encoded=true&fields=*`;\r\n  const options = {\r\n    method: \"GET\",\r\n    headers: {\r\n      \"x-rapidapi-key\": '1558ae9227msh2b84ac0e3c035a6p1f1ea8jsnd5f346ec6800',\r\n      'x-rapidapi-host': 'judge0-ce.p.rapidapi.com',\r\n    },\r\n  };\r\n\r\n  try {\r\n    const response = await fetch(url, options);\r\n    const result = await response.json();\r\n    console.log(result);\r\n  } catch (error) {\r\n    callback({ apiStatus: 'error', message: JSON.stringify(error) });\r\n\r\n  }\r\n}\r\n\r\nexport async function makeSubmission({ code, language, callback, stdin }) {\r\n  // make a submission handle the status of the submission\r\n  const url =\r\n    \"https://judge0-ce.p.rapidapi.com/submissions?base64_encoded=true&fields=*\";\r\n\r\n  const httpOptions = {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"x-rapidapi-key\": \"1558ae9227msh2b84ac0e3c035a6p1f1ea8jsnd5f346ec6800\",\r\n      \"x-rapidapi-host\": \"judge0-ce.p.rapidapi.com\",\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify({\r\n      language_id: languageCodeMap[language],\r\n      source_code: btoa(code),\r\n      stdin: btoa(stdin),\r\n    }),\r\n  };\r\n\r\n  try {\r\n    callback({ apiStatus: 'loading' });\r\n    const response = await fetch(url, httpOptions);\r\n    const result = await response.json();\r\n    const tokenId = result.token;\r\n    let statusCode = 1; // in queue\r\n    let apiSubmissionResult;\r\n  \r\n    while (statusCode === 1 || statusCode === 2) {\r\n      try {\r\n        apiSubmissionResult = await getSubmission(tokenId);\r\n        statusCode = apiSubmissionResult.status.id;\r\n      } catch (error) {\r\n        callback({ apiStatus: 'error', message: JSON.stringify(error) });\r\n        return;\r\n      }\r\n    }\r\n  \r\n    if (apiSubmissionResult) {\r\n      callback({ apiStatus: 'success', data: apiSubmissionResult });\r\n    }\r\n  }\r\n  \r\n  \r\n  catch (error) {\r\n    callback({\r\n      apiStatus: \"error\",\r\n      message: JSON.stringify(error),\r\n    });\r\n  }\r\n\r\n}\r\n"],"mappings":"AAAA,MAAMA,eAAe,GAAG;EACtBC,GAAG,EAAE,EAAE;EACPC,MAAM,EAAE,EAAE;EACVC,UAAU,EAAE,EAAE;EACdC,IAAI,EAAE;AACR,CAAC;AAED,eAAeC,aAAaA,CAACC,OAAO,EAAEC,QAAQ,EAAE;EAC9C,MAAMC,GAAG,GAAG,gDAAgDF,OAAO,+BAA+B;EAClG,MAAMG,OAAO,GAAG;IACdC,MAAM,EAAE,KAAK;IACbC,OAAO,EAAE;MACP,gBAAgB,EAAE,oDAAoD;MACtE,iBAAiB,EAAE;IACrB;EACF,CAAC;EAED,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACL,GAAG,EAAEC,OAAO,CAAC;IAC1C,MAAMK,MAAM,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;IACpCC,OAAO,CAACC,GAAG,CAACH,MAAM,CAAC;EACrB,CAAC,CAAC,OAAOI,KAAK,EAAE;IACdX,QAAQ,CAAC;MAAEY,SAAS,EAAE,OAAO;MAAEC,OAAO,EAAEC,IAAI,CAACC,SAAS,CAACJ,KAAK;IAAE,CAAC,CAAC;EAElE;AACF;AAEA,OAAO,eAAeK,cAAcA,CAAC;EAAEC,IAAI;EAAEC,QAAQ;EAAElB,QAAQ;EAAEmB;AAAM,CAAC,EAAE;EACxE;EACA,MAAMlB,GAAG,GACP,2EAA2E;EAE7E,MAAMmB,WAAW,GAAG;IAClBjB,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,gBAAgB,EAAE,oDAAoD;MACtE,iBAAiB,EAAE,0BAA0B;MAC7C,cAAc,EAAE;IAClB,CAAC;IACDiB,IAAI,EAAEP,IAAI,CAACC,SAAS,CAAC;MACnBO,WAAW,EAAE7B,eAAe,CAACyB,QAAQ,CAAC;MACtCK,WAAW,EAAEC,IAAI,CAACP,IAAI,CAAC;MACvBE,KAAK,EAAEK,IAAI,CAACL,KAAK;IACnB,CAAC;EACH,CAAC;EAED,IAAI;IACFnB,QAAQ,CAAC;MAAEY,SAAS,EAAE;IAAU,CAAC,CAAC;IAClC,MAAMP,QAAQ,GAAG,MAAMC,KAAK,CAACL,GAAG,EAAEmB,WAAW,CAAC;IAC9C,MAAMb,MAAM,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;IACpC,MAAMT,OAAO,GAAGQ,MAAM,CAACkB,KAAK;IAC5B,IAAIC,UAAU,GAAG,CAAC,CAAC,CAAC;IACpB,IAAIC,mBAAmB;IAEvB,OAAOD,UAAU,KAAK,CAAC,IAAIA,UAAU,KAAK,CAAC,EAAE;MAC3C,IAAI;QACFC,mBAAmB,GAAG,MAAM7B,aAAa,CAACC,OAAO,CAAC;QAClD2B,UAAU,GAAGC,mBAAmB,CAACC,MAAM,CAACC,EAAE;MAC5C,CAAC,CAAC,OAAOlB,KAAK,EAAE;QACdX,QAAQ,CAAC;UAAEY,SAAS,EAAE,OAAO;UAAEC,OAAO,EAAEC,IAAI,CAACC,SAAS,CAACJ,KAAK;QAAE,CAAC,CAAC;QAChE;MACF;IACF;IAEA,IAAIgB,mBAAmB,EAAE;MACvB3B,QAAQ,CAAC;QAAEY,SAAS,EAAE,SAAS;QAAEkB,IAAI,EAAEH;MAAoB,CAAC,CAAC;IAC/D;EACF,CAAC,CAGD,OAAOhB,KAAK,EAAE;IACZX,QAAQ,CAAC;MACPY,SAAS,EAAE,OAAO;MAClBC,OAAO,EAAEC,IAAI,CAACC,SAAS,CAACJ,KAAK;IAC/B,CAAC,CAAC;EACJ;AAEF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}